// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class BlacklistAdded extends ethereum.Event {
  get params(): BlacklistAdded__Params {
    return new BlacklistAdded__Params(this);
  }
}

export class BlacklistAdded__Params {
  _event: BlacklistAdded;

  constructor(event: BlacklistAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class BlacklistRemoved extends ethereum.Event {
  get params(): BlacklistRemoved__Params {
    return new BlacklistRemoved__Params(this);
  }
}

export class BlacklistRemoved__Params {
  _event: BlacklistRemoved;

  constructor(event: BlacklistRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ContractAdded extends ethereum.Event {
  get params(): ContractAdded__Params {
    return new ContractAdded__Params(this);
  }
}

export class ContractAdded__Params {
  _event: ContractAdded;

  constructor(event: ContractAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ContractRemoved extends ethereum.Event {
  get params(): ContractRemoved__Params {
    return new ContractRemoved__Params(this);
  }
}

export class ContractRemoved__Params {
  _event: ContractRemoved;

  constructor(event: ContractRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IdentityAdminAdded extends ethereum.Event {
  get params(): IdentityAdminAdded__Params {
    return new IdentityAdminAdded__Params(this);
  }
}

export class IdentityAdminAdded__Params {
  _event: IdentityAdminAdded;

  constructor(event: IdentityAdminAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class IdentityAdminRemoved extends ethereum.Event {
  get params(): IdentityAdminRemoved__Params {
    return new IdentityAdminRemoved__Params(this);
  }
}

export class IdentityAdminRemoved__Params {
  _event: IdentityAdminRemoved;

  constructor(event: IdentityAdminRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PauserAdded extends ethereum.Event {
  get params(): PauserAdded__Params {
    return new PauserAdded__Params(this);
  }
}

export class PauserAdded__Params {
  _event: PauserAdded;

  constructor(event: PauserAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PauserRemoved extends ethereum.Event {
  get params(): PauserRemoved__Params {
    return new PauserRemoved__Params(this);
  }
}

export class PauserRemoved__Params {
  _event: PauserRemoved;

  constructor(event: PauserRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistedAdded extends ethereum.Event {
  get params(): WhitelistedAdded__Params {
    return new WhitelistedAdded__Params(this);
  }
}

export class WhitelistedAdded__Params {
  _event: WhitelistedAdded;

  constructor(event: WhitelistedAdded) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WhitelistedRemoved extends ethereum.Event {
  get params(): WhitelistedRemoved__Params {
    return new WhitelistedRemoved__Params(this);
  }
}

export class WhitelistedRemoved__Params {
  _event: WhitelistedRemoved;

  constructor(event: WhitelistedRemoved) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class identity extends ethereum.SmartContract {
  static bind(address: Address): identity {
    return new identity("identity", address);
  }

  addIdentityAdmin(account: Address): boolean {
    let result = super.call(
      "addIdentityAdmin",
      "addIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_addIdentityAdmin(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "addIdentityAdmin",
      "addIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  addrToDID(param0: Address): string {
    let result = super.call("addrToDID", "addrToDID(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toString();
  }

  try_addrToDID(param0: Address): ethereum.CallResult<string> {
    let result = super.tryCall("addrToDID", "addrToDID(address):(string)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  authenticationPeriod(): BigInt {
    let result = super.call(
      "authenticationPeriod",
      "authenticationPeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_authenticationPeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "authenticationPeriod",
      "authenticationPeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dateAdded(param0: Address): BigInt {
    let result = super.call("dateAdded", "dateAdded(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBigInt();
  }

  try_dateAdded(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("dateAdded", "dateAdded(address):(uint256)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  dateAuthenticated(param0: Address): BigInt {
    let result = super.call(
      "dateAuthenticated",
      "dateAuthenticated(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_dateAuthenticated(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "dateAuthenticated",
      "dateAuthenticated(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  didHashToAddress(param0: Bytes): Address {
    let result = super.call(
      "didHashToAddress",
      "didHashToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );

    return result[0].toAddress();
  }

  try_didHashToAddress(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "didHashToAddress",
      "didHashToAddress(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isIdentityAdmin(account: Address): boolean {
    let result = super.call(
      "isIdentityAdmin",
      "isIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_isIdentityAdmin(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isIdentityAdmin",
      "isIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPauser(account: Address): boolean {
    let result = super.call("isPauser", "isPauser(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isPauser(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPauser", "isPauser(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistered(): boolean {
    let result = super.call("isRegistered", "isRegistered():(bool)", []);

    return result[0].toBoolean();
  }

  try_isRegistered(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRegistered", "isRegistered():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isRegistered1(scheme: Address): boolean {
    let result = super.call("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(scheme)
    ]);

    return result[0].toBoolean();
  }

  try_isRegistered1(scheme: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isRegistered", "isRegistered(address):(bool)", [
      ethereum.Value.fromAddress(scheme)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  removeIdentityAdmin(account: Address): boolean {
    let result = super.call(
      "removeIdentityAdmin",
      "removeIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBoolean();
  }

  try_removeIdentityAdmin(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "removeIdentityAdmin",
      "removeIdentityAdmin(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  whitelistedContracts(): BigInt {
    let result = super.call(
      "whitelistedContracts",
      "whitelistedContracts():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_whitelistedContracts(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "whitelistedContracts",
      "whitelistedContracts():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  whitelistedCount(): BigInt {
    let result = super.call(
      "whitelistedCount",
      "whitelistedCount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_whitelistedCount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "whitelistedCount",
      "whitelistedCount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isWhitelisted(account: Address): boolean {
    let result = super.call("isWhitelisted", "isWhitelisted(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isWhitelisted(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isWhitelisted",
      "isWhitelisted(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  lastAuthenticated(account: Address): BigInt {
    let result = super.call(
      "lastAuthenticated",
      "lastAuthenticated(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );

    return result[0].toBigInt();
  }

  try_lastAuthenticated(account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastAuthenticated",
      "lastAuthenticated(address):(uint256)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isDAOContract(account: Address): boolean {
    let result = super.call("isDAOContract", "isDAOContract(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isDAOContract(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isDAOContract",
      "isDAOContract(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isBlacklisted(account: Address): boolean {
    let result = super.call("isBlacklisted", "isBlacklisted(address):(bool)", [
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_isBlacklisted(account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isBlacklisted",
      "isBlacklisted(address):(bool)",
      [ethereum.Value.fromAddress(account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddIdentityAdminCall extends ethereum.Call {
  get inputs(): AddIdentityAdminCall__Inputs {
    return new AddIdentityAdminCall__Inputs(this);
  }

  get outputs(): AddIdentityAdminCall__Outputs {
    return new AddIdentityAdminCall__Outputs(this);
  }
}

export class AddIdentityAdminCall__Inputs {
  _call: AddIdentityAdminCall;

  constructor(call: AddIdentityAdminCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddIdentityAdminCall__Outputs {
  _call: AddIdentityAdminCall;

  constructor(call: AddIdentityAdminCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class AddPauserCall extends ethereum.Call {
  get inputs(): AddPauserCall__Inputs {
    return new AddPauserCall__Inputs(this);
  }

  get outputs(): AddPauserCall__Outputs {
    return new AddPauserCall__Outputs(this);
  }
}

export class AddPauserCall__Inputs {
  _call: AddPauserCall;

  constructor(call: AddPauserCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddPauserCall__Outputs {
  _call: AddPauserCall;

  constructor(call: AddPauserCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RemoveIdentityAdminCall extends ethereum.Call {
  get inputs(): RemoveIdentityAdminCall__Inputs {
    return new RemoveIdentityAdminCall__Inputs(this);
  }

  get outputs(): RemoveIdentityAdminCall__Outputs {
    return new RemoveIdentityAdminCall__Outputs(this);
  }
}

export class RemoveIdentityAdminCall__Inputs {
  _call: RemoveIdentityAdminCall;

  constructor(call: RemoveIdentityAdminCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveIdentityAdminCall__Outputs {
  _call: RemoveIdentityAdminCall;

  constructor(call: RemoveIdentityAdminCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class RenounceIdentityAdminCall extends ethereum.Call {
  get inputs(): RenounceIdentityAdminCall__Inputs {
    return new RenounceIdentityAdminCall__Inputs(this);
  }

  get outputs(): RenounceIdentityAdminCall__Outputs {
    return new RenounceIdentityAdminCall__Outputs(this);
  }
}

export class RenounceIdentityAdminCall__Inputs {
  _call: RenounceIdentityAdminCall;

  constructor(call: RenounceIdentityAdminCall) {
    this._call = call;
  }
}

export class RenounceIdentityAdminCall__Outputs {
  _call: RenounceIdentityAdminCall;

  constructor(call: RenounceIdentityAdminCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenouncePauserCall extends ethereum.Call {
  get inputs(): RenouncePauserCall__Inputs {
    return new RenouncePauserCall__Inputs(this);
  }

  get outputs(): RenouncePauserCall__Outputs {
    return new RenouncePauserCall__Outputs(this);
  }
}

export class RenouncePauserCall__Inputs {
  _call: RenouncePauserCall;

  constructor(call: RenouncePauserCall) {
    this._call = call;
  }
}

export class RenouncePauserCall__Outputs {
  _call: RenouncePauserCall;

  constructor(call: RenouncePauserCall) {
    this._call = call;
  }
}

export class SetAvatarCall extends ethereum.Call {
  get inputs(): SetAvatarCall__Inputs {
    return new SetAvatarCall__Inputs(this);
  }

  get outputs(): SetAvatarCall__Outputs {
    return new SetAvatarCall__Outputs(this);
  }
}

export class SetAvatarCall__Inputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }

  get _avatar(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetAvatarCall__Outputs {
  _call: SetAvatarCall;

  constructor(call: SetAvatarCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class SetAuthenticationPeriodCall extends ethereum.Call {
  get inputs(): SetAuthenticationPeriodCall__Inputs {
    return new SetAuthenticationPeriodCall__Inputs(this);
  }

  get outputs(): SetAuthenticationPeriodCall__Outputs {
    return new SetAuthenticationPeriodCall__Outputs(this);
  }
}

export class SetAuthenticationPeriodCall__Inputs {
  _call: SetAuthenticationPeriodCall;

  constructor(call: SetAuthenticationPeriodCall) {
    this._call = call;
  }

  get period(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetAuthenticationPeriodCall__Outputs {
  _call: SetAuthenticationPeriodCall;

  constructor(call: SetAuthenticationPeriodCall) {
    this._call = call;
  }
}

export class AuthenticateCall extends ethereum.Call {
  get inputs(): AuthenticateCall__Inputs {
    return new AuthenticateCall__Inputs(this);
  }

  get outputs(): AuthenticateCall__Outputs {
    return new AuthenticateCall__Outputs(this);
  }
}

export class AuthenticateCall__Inputs {
  _call: AuthenticateCall;

  constructor(call: AuthenticateCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AuthenticateCall__Outputs {
  _call: AuthenticateCall;

  constructor(call: AuthenticateCall) {
    this._call = call;
  }
}

export class AddWhitelistedCall extends ethereum.Call {
  get inputs(): AddWhitelistedCall__Inputs {
    return new AddWhitelistedCall__Inputs(this);
  }

  get outputs(): AddWhitelistedCall__Outputs {
    return new AddWhitelistedCall__Outputs(this);
  }
}

export class AddWhitelistedCall__Inputs {
  _call: AddWhitelistedCall;

  constructor(call: AddWhitelistedCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddWhitelistedCall__Outputs {
  _call: AddWhitelistedCall;

  constructor(call: AddWhitelistedCall) {
    this._call = call;
  }
}

export class AddWhitelistedWithDIDCall extends ethereum.Call {
  get inputs(): AddWhitelistedWithDIDCall__Inputs {
    return new AddWhitelistedWithDIDCall__Inputs(this);
  }

  get outputs(): AddWhitelistedWithDIDCall__Outputs {
    return new AddWhitelistedWithDIDCall__Outputs(this);
  }
}

export class AddWhitelistedWithDIDCall__Inputs {
  _call: AddWhitelistedWithDIDCall;

  constructor(call: AddWhitelistedWithDIDCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get did(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class AddWhitelistedWithDIDCall__Outputs {
  _call: AddWhitelistedWithDIDCall;

  constructor(call: AddWhitelistedWithDIDCall) {
    this._call = call;
  }
}

export class RemoveWhitelistedCall extends ethereum.Call {
  get inputs(): RemoveWhitelistedCall__Inputs {
    return new RemoveWhitelistedCall__Inputs(this);
  }

  get outputs(): RemoveWhitelistedCall__Outputs {
    return new RemoveWhitelistedCall__Outputs(this);
  }
}

export class RemoveWhitelistedCall__Inputs {
  _call: RemoveWhitelistedCall;

  constructor(call: RemoveWhitelistedCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveWhitelistedCall__Outputs {
  _call: RemoveWhitelistedCall;

  constructor(call: RemoveWhitelistedCall) {
    this._call = call;
  }
}

export class RenounceWhitelistedCall extends ethereum.Call {
  get inputs(): RenounceWhitelistedCall__Inputs {
    return new RenounceWhitelistedCall__Inputs(this);
  }

  get outputs(): RenounceWhitelistedCall__Outputs {
    return new RenounceWhitelistedCall__Outputs(this);
  }
}

export class RenounceWhitelistedCall__Inputs {
  _call: RenounceWhitelistedCall;

  constructor(call: RenounceWhitelistedCall) {
    this._call = call;
  }
}

export class RenounceWhitelistedCall__Outputs {
  _call: RenounceWhitelistedCall;

  constructor(call: RenounceWhitelistedCall) {
    this._call = call;
  }
}

export class AddBlacklistedCall extends ethereum.Call {
  get inputs(): AddBlacklistedCall__Inputs {
    return new AddBlacklistedCall__Inputs(this);
  }

  get outputs(): AddBlacklistedCall__Outputs {
    return new AddBlacklistedCall__Outputs(this);
  }
}

export class AddBlacklistedCall__Inputs {
  _call: AddBlacklistedCall;

  constructor(call: AddBlacklistedCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddBlacklistedCall__Outputs {
  _call: AddBlacklistedCall;

  constructor(call: AddBlacklistedCall) {
    this._call = call;
  }
}

export class RemoveBlacklistedCall extends ethereum.Call {
  get inputs(): RemoveBlacklistedCall__Inputs {
    return new RemoveBlacklistedCall__Inputs(this);
  }

  get outputs(): RemoveBlacklistedCall__Outputs {
    return new RemoveBlacklistedCall__Outputs(this);
  }
}

export class RemoveBlacklistedCall__Inputs {
  _call: RemoveBlacklistedCall;

  constructor(call: RemoveBlacklistedCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveBlacklistedCall__Outputs {
  _call: RemoveBlacklistedCall;

  constructor(call: RemoveBlacklistedCall) {
    this._call = call;
  }
}

export class AddContractCall extends ethereum.Call {
  get inputs(): AddContractCall__Inputs {
    return new AddContractCall__Inputs(this);
  }

  get outputs(): AddContractCall__Outputs {
    return new AddContractCall__Outputs(this);
  }
}

export class AddContractCall__Inputs {
  _call: AddContractCall;

  constructor(call: AddContractCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddContractCall__Outputs {
  _call: AddContractCall;

  constructor(call: AddContractCall) {
    this._call = call;
  }
}

export class RemoveContractCall extends ethereum.Call {
  get inputs(): RemoveContractCall__Inputs {
    return new RemoveContractCall__Inputs(this);
  }

  get outputs(): RemoveContractCall__Outputs {
    return new RemoveContractCall__Outputs(this);
  }
}

export class RemoveContractCall__Inputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveContractCall__Outputs {
  _call: RemoveContractCall;

  constructor(call: RemoveContractCall) {
    this._call = call;
  }
}
