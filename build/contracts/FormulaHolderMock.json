{
  "contractName": "FormulaHolderMock",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "formula",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_formula",
          "type": "address"
        }
      ],
      "name": "setFormula",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_formula",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"formula\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_formula\",\"type\":\"address\"}],\"name\":\"setFormula\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_formula\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/mocks/FormulaHolderMock.sol\":\"FormulaHolderMock\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol\":{\"keccak256\":\"0x41502f8de3e413a2921770aa75a194143d0eea13791912ed1b565757ade23828\",\"urls\":[\"bzzr://acc92669be111440c6a58132942aee43b7833a60c6774a2212839d3a50e42a13\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol\":{\"keccak256\":\"0xba268c8ad7aa3d06e7cb5f15b49bfc165a2f0e643c35c081f59a2b56ae901bc4\",\"urls\":[\"bzzr://e773153683ae06216650fb9e97c483276a33f868225979bfaefe254613597806\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0x881bddc08b047ddf429563a809453b1aa4dd59c6fd0cbc8ecdfcb8477ca6550b\",\"urls\":[\"bzzr://22ea913bcede716a6d813af384a1957741740154988b9d5c09860ce0993368b8\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/mocks/FormulaHolderMock.sol\":{\"keccak256\":\"0x74ee3539938fd28e29d0714f68a9fc0c07afa2ba41f62ce9c62663e054158ef6\",\"urls\":[\"bzzr://1c6fb4103ff2e17d7f21145deec8b24e0ed13afde3befd26612ab4fba3e24d96\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzzr://b0af60e651a75274a028dc4b53d06091a46ca0efa3bfb4153879e76cf86a49dc\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzzr://e8050774c20b9b22636b47cdd353eaf5df72e0bca8f2b8569365be30f4eaef0c\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzzr://7ba306fdbad344e01474e3ae9c37b27b64efdc1cb17ffc0f3ec1c4427fde359d\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzzr://d1f293a0bbaa292296a83977cb36a14048db404a32e3f6aa9bd79ea61ac3c4c3\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzzr://cd706a2dc7540d093b591a280b464256c596ddad598b68886e6db2e7958f9916\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzzr://7f219e1874d4f1aea860cc665b75015797f55f149e9bf490abab5d7ad2adfeb9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzzr://63fc4af0d7a99a770925b96a6cf48f25fc00d30274266f82db05f30baa238267\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806104698339810180604052602081101561003057600080fd5b505160008054600160a060020a03191633178082556040518392600160a060020a039290921691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160a060020a03811615156100f457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f537570706c69656420666f726d756c61206973206e756c6c0000000000000000604482015290519081900360640190fd5b60018054600160a060020a031916600160a060020a039290921691909117905550610345806101246000396000f3fe608060405234801561001057600080fd5b506004361061007e577c010000000000000000000000000000000000000000000000000000000060003504634b75f54f8114610083578063715018a6146100a75780638da5cb5b146100b15780638f32d59b146100b9578063ecc06c76146100d5578063f2fde38b146100fb575b600080fd5b61008b610121565b60408051600160a060020a039092168252519081900360200190f35b6100af610130565b005b61008b61019a565b6100c16101a9565b604080519115158252519081900360200190f35b6100af600480360360208110156100eb57600080fd5b5035600160a060020a03166101ba565b6100af6004803603602081101561011157600080fd5b5035600160a060020a031661027d565b600154600160a060020a031681565b6101386101a9565b151561014357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6101c26101a9565b15156101cd57600080fd5b80600160a060020a031663223668446040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d602081101561024c57600080fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6102856101a9565b151561029057600080fd5b6102998161029c565b50565b600160a060020a03811615156102b157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a723058205d7d14e2e0e5a59bf999bf4fd1e2e149fecdfd43a07ee0d3a7178049add4b84d0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007e577c010000000000000000000000000000000000000000000000000000000060003504634b75f54f8114610083578063715018a6146100a75780638da5cb5b146100b15780638f32d59b146100b9578063ecc06c76146100d5578063f2fde38b146100fb575b600080fd5b61008b610121565b60408051600160a060020a039092168252519081900360200190f35b6100af610130565b005b61008b61019a565b6100c16101a9565b604080519115158252519081900360200190f35b6100af600480360360208110156100eb57600080fd5b5035600160a060020a03166101ba565b6100af6004803603602081101561011157600080fd5b5035600160a060020a031661027d565b600154600160a060020a031681565b6101386101a9565b151561014357600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b6101c26101a9565b15156101cd57600080fd5b80600160a060020a031663223668446040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561022257600080fd5b505afa158015610236573d6000803e3d6000fd5b505050506040513d602081101561024c57600080fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055565b6102856101a9565b151561029057600080fd5b6102998161029c565b50565b600160a060020a03811615156102b157600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a723058205d7d14e2e0e5a59bf999bf4fd1e2e149fecdfd43a07ee0d3a7178049add4b84d0029",
  "sourceMap": "108:125:23:-;;;159:72;8:9:-1;5:2;;;30:1;27;20:12;5:2;159:72:23;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;159:72:23;515:6:60;:19;;-1:-1:-1;;;;;;515:19:60;524:10;515:19;;;;549:40;;159:72:23;;-1:-1:-1;;;;;582:6:60;;;;;515;549:40;;515:6;;549:40;-1:-1:-1;;;;;465:25:8;;;;457:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;529:7;:18;;-1:-1:-1;;;;;;529:18:8;-1:-1:-1;;;;;529:18:8;;;;;;;;;;-1:-1:-1;108:125:23;;;-1:-1:-1;108:125:23;;",
  "deployedSourceMap": "108:125:23:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;108:125:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;244:25:8;;;:::i;:::-;;;;-1:-1:-1;;;;;244:25:8;;;;;;;;;;;;;;1347:137:60;;;:::i;:::-;;659:77;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;752:126:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;752:126:8;-1:-1:-1;;;;;752:126:8;;:::i;1655:107:60:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:60;-1:-1:-1;;;;;1655:107:60;;:::i;244:25:8:-;;;-1:-1:-1;;;;;244:25:8;;:::o;1347:137:60:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:60;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:60;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:60;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:60;1042:10;:20;;979:90::o;752:126:8:-;863:9:60;:7;:9::i;:::-;855:18;;;;;;;;820:8:8;-1:-1:-1;;;;;820:21:8;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;820:23:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;820:23:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;853:7:8;:18;;-1:-1:-1;;853:18:8;-1:-1:-1;;;;;853:18:8;;;;;;;;;;752:126::o;1655:107:60:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;1906:183::-;-1:-1:-1;;;;;1979:22:60;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:60;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:60;-1:-1:-1;;;;;2065:17:60;;;;;;;;;;1906:183::o",
  "source": "pragma solidity 0.5.4;\n\nimport \"../dao/schemes/FormulaHolder.sol\";\nimport \"../dao/schemes/FeeFormula.sol\";\n\ncontract FormulaHolderMock is FormulaHolder {\n\n    constructor(FeeFormula _formula) public FormulaHolder(_formula) {\n\n    }\n}",
  "sourcePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/mocks/FormulaHolderMock.sol",
  "ast": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/mocks/FormulaHolderMock.sol",
    "exportedSymbols": {
      "FormulaHolderMock": [
        3870
      ]
    },
    "id": 3871,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3856,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:23"
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
        "file": "../dao/schemes/FormulaHolder.sol",
        "id": 3857,
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 1295,
        "src": "24:42:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "../dao/schemes/FeeFormula.sol",
        "id": 3858,
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 923,
        "src": "67:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3859,
              "name": "FormulaHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1294,
              "src": "138:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FormulaHolder_$1294",
                "typeString": "contract FormulaHolder"
              }
            },
            "id": 3860,
            "nodeType": "InheritanceSpecifier",
            "src": "138:13:23"
          }
        ],
        "contractDependencies": [
          1294,
          14243
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3870,
        "linearizedBaseContracts": [
          3870,
          1294,
          14243
        ],
        "name": "FormulaHolderMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3868,
              "nodeType": "Block",
              "src": "223:8:23",
              "statements": []
            },
            "documentation": null,
            "id": 3869,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3865,
                    "name": "_formula",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3862,
                    "src": "213:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$922",
                      "typeString": "contract FeeFormula"
                    }
                  }
                ],
                "id": 3866,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3864,
                  "name": "FormulaHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1294,
                  "src": "199:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FormulaHolder_$1294_$",
                    "typeString": "type(contract FormulaHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "199:23:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 3869,
                  "src": "171:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$922",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3861,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 922,
                    "src": "171:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$922",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:21:23"
            },
            "returnParameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:0:23"
            },
            "scope": 3870,
            "src": "159:72:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3871,
        "src": "108:125:23"
      }
    ],
    "src": "0:233:23"
  },
  "legacyAST": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/mocks/FormulaHolderMock.sol",
    "exportedSymbols": {
      "FormulaHolderMock": [
        3870
      ]
    },
    "id": 3871,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3856,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:23"
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
        "file": "../dao/schemes/FormulaHolder.sol",
        "id": 3857,
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 1295,
        "src": "24:42:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "../dao/schemes/FeeFormula.sol",
        "id": 3858,
        "nodeType": "ImportDirective",
        "scope": 3871,
        "sourceUnit": 923,
        "src": "67:39:23",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3859,
              "name": "FormulaHolder",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1294,
              "src": "138:13:23",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FormulaHolder_$1294",
                "typeString": "contract FormulaHolder"
              }
            },
            "id": 3860,
            "nodeType": "InheritanceSpecifier",
            "src": "138:13:23"
          }
        ],
        "contractDependencies": [
          1294,
          14243
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3870,
        "linearizedBaseContracts": [
          3870,
          1294,
          14243
        ],
        "name": "FormulaHolderMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3868,
              "nodeType": "Block",
              "src": "223:8:23",
              "statements": []
            },
            "documentation": null,
            "id": 3869,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3865,
                    "name": "_formula",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3862,
                    "src": "213:8:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$922",
                      "typeString": "contract FeeFormula"
                    }
                  }
                ],
                "id": 3866,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3864,
                  "name": "FormulaHolder",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1294,
                  "src": "199:13:23",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_FormulaHolder_$1294_$",
                    "typeString": "type(contract FormulaHolder)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "199:23:23"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3862,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 3869,
                  "src": "171:19:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$922",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3861,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 922,
                    "src": "171:10:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$922",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "170:21:23"
            },
            "returnParameters": {
              "id": 3867,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "223:0:23"
            },
            "scope": 3870,
            "src": "159:72:23",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3871,
        "src": "108:125:23"
      }
    ],
    "src": "0:233:23"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-04-26T07:05:12.883Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}