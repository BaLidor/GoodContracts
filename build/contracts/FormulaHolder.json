{
  "contractName": "FormulaHolder",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "formula",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_formula",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_formula",
          "type": "address"
        },
        {
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setFormula",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"formula\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_formula\",\"type\":\"address\"},{\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setFormula\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_formula\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}}},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol\":\"FormulaHolder\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/AvatarGuard.sol\":{\"keccak256\":\"0x5843874a798ee5903db59aefbdab4242e753de1ded542241d4498393d784ee89\",\"urls\":[\"bzzr://f191185eb748b2ae56be24a9e0a8779479b49f8bb0cd0abd30ec68e6f3e53c6b\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol\":{\"keccak256\":\"0xbcca9f9de669a5643dc9859cbcbd5706b7835a025369fc91016cf44d7dd1fe9d\",\"urls\":[\"bzzr://c142463b6057b0aa0c2746acaf4796e06cf75bd18e13fde3abb81418ffced8eb\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol\":{\"keccak256\":\"0x8c1476c4cc4fced5464bec842f0abf0b6aa272130ab46fe9d4e87e740b4f6237\",\"urls\":[\"bzzr://31edf34efc9f54cdd58416dfeb18faf38e2f77b643878678ea8fb569b93ef9b6\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0x8b32b882222d4ba2a7fc6a29cd2920ef8d78673dbe3cdd7613908172c530eb2f\",\"urls\":[\"bzzr://882c0d8a17e5bbda9712825707058b4d18f537b6d7c480dc6e7628bc8c0575b2\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzzr://b0af60e651a75274a028dc4b53d06091a46ca0efa3bfb4153879e76cf86a49dc\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzzr://e8050774c20b9b22636b47cdd353eaf5df72e0bca8f2b8569365be30f4eaef0c\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzzr://7ba306fdbad344e01474e3ae9c37b27b64efdc1cb17ffc0f3ec1c4427fde359d\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzzr://d1f293a0bbaa292296a83977cb36a14048db404a32e3f6aa9bd79ea61ac3c4c3\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzzr://cd706a2dc7540d093b591a280b464256c596ddad598b68886e6db2e7958f9916\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzzr://7f219e1874d4f1aea860cc665b75015797f55f149e9bf490abab5d7ad2adfeb9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xc2a200a877c4a9b2475c246c54ffecc69ffde3e11af83319c63c2dc5458bac80\",\"urls\":[\"bzzr://c8876e2c39b60f155d748d71d715c8f3903fae5a405ac599adcb6ad2f9a583f9\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0xcb16adc00dcf0d75e0bdf94379f4d5a6d74dca7c74e4183b94e15721159f8a30\",\"urls\":[\"bzzr://b81e03f7203cd628cfed19255911a04a05e8670d248afb48a7b067dd03b4ff55\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x3dceb7e4aa237a56111c13f77d7efadeceda7271d62bfac94ac79afab7c1f411\",\"urls\":[\"bzzr://2f34152a5bec385352002c31bc89f5e9935f628f1923ccea45c2281e0084a4db\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xcf6b3e804a9b1e3d6ca4a695524cbaa52cd26cc86978a2b99052ba1a5d25653f\",\"urls\":[\"bzzr://8f763f9e6a0cdf1b7f07be575b3d4011e18a672b1365e26634e03580761e6858\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x59e7df16169a498cb8837963b2f5461d88e63bd1eb6c7d58b814d76b84ccbe61\",\"urls\":[\"bzzr://e572c9c4e02e37349702451bf3b5dcbbc86a19da5a51695b5b3e1bfe1e7825dc\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0xea16b9933153c647242ba50b3e494fb133063d49f1fa81823f35a8c28754142e\",\"urls\":[\"bzzr://aa2b2eb534149525e194341c01cadf666668a1b7d679a268d10e23570a7e26b1\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516020806106228339810180604052602081101561003057600080fd5b505160008054600160a060020a0319163317808255604051600160a060020a039190911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3600160a060020a03811615156100f257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f537570706c69656420666f726d756c61206973206e756c6c0000000000000000604482015290519081900360640190fd5b60018054600160a060020a031916600160a060020a0392909216919091179055610501806101216000396000f3fe608060405234801561001057600080fd5b50600436106100655760e060020a60003504634b75f54f811461006a578063715018a61461008e578063804f1b04146100985780638da5cb5b146100c65780638f32d59b146100ce578063f2fde38b146100ea575b600080fd5b610072610110565b60408051600160a060020a039092168252519081900360200190f35b61009661011f565b005b610096600480360360408110156100ae57600080fd5b50600160a060020a0381358116916020013516610189565b6100726103f0565b6100d66103ff565b604080519115158252519081900360200190f35b6100966004803603602081101561010057600080fd5b5035600160a060020a0316610410565b600154600160a060020a031681565b6101276103ff565b151561013257600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b8033600160a060020a038216148015610299575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101d957600080fd5b505afa1580156101ed573d6000803e3d6000fd5b505050506040513d602081101561020357600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d602081101561028c57600080fd5b5051600160a060020a0316145b80610313575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156102db57600080fd5b505afa1580156102ef573d6000803e3d6000fd5b505050506040513d602081101561030557600080fd5b5051600160a060020a031633145b151561036a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806104ad6029913960400191505060405180910390fd5b82600160a060020a031663223668446040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156103a657600080fd5b505afa1580156103ba573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03969096169590951790945550505050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104186103ff565b151561042357600080fd5b61042c8161042f565b50565b600160a060020a038116151561044457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a72305820567a9d0f5641fefff14e5dd9efcf5ca7827123f9b171a1c2b1a4ddf8a036eb5b0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100655760e060020a60003504634b75f54f811461006a578063715018a61461008e578063804f1b04146100985780638da5cb5b146100c65780638f32d59b146100ce578063f2fde38b146100ea575b600080fd5b610072610110565b60408051600160a060020a039092168252519081900360200190f35b61009661011f565b005b610096600480360360408110156100ae57600080fd5b50600160a060020a0381358116916020013516610189565b6100726103f0565b6100d66103ff565b604080519115158252519081900360200190f35b6100966004803603602081101561010057600080fd5b5035600160a060020a0316610410565b600154600160a060020a031681565b6101276103ff565b151561013257600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b8033600160a060020a038216148015610299575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156101d957600080fd5b505afa1580156101ed573d6000803e3d6000fd5b505050506040513d602081101561020357600080fd5b5051604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051600160a060020a0392831692841691638da5cb5b916004808301926020929190829003018186803b15801561026257600080fd5b505afa158015610276573d6000803e3d6000fd5b505050506040513d602081101561028c57600080fd5b5051600160a060020a0316145b80610313575030600160a060020a0316638da5cb5b6040518163ffffffff1660e060020a02815260040160206040518083038186803b1580156102db57600080fd5b505afa1580156102ef573d6000803e3d6000fd5b505050506040513d602081101561030557600080fd5b5051600160a060020a031633145b151561036a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806104ad6029913960400191505060405180910390fd5b82600160a060020a031663223668446040518163ffffffff1660e060020a02815260040160006040518083038186803b1580156103a657600080fd5b505afa1580156103ba573d6000803e3d6000fd5b50506001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03969096169590951790945550505050565b600054600160a060020a031690565b600054600160a060020a0316331490565b6104186103ff565b151561042357600080fd5b61042c8161042f565b50565b600160a060020a038116151561044457600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fe4f6e6c792063616c6c61626c6520627920617661746172206f66206f776e6572206f72206f776e6572a165627a7a72305820567a9d0f5641fefff14e5dd9efcf5ca7827123f9b171a1c2b1a4ddf8a036eb5b0029",
  "sourceMap": "178:807:8:-;;;373:147;8:9:-1;5:2;;;30:1;27;20:12;5:2;373:147:8;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;373:147:8;515:6:54;:19;;-1:-1:-1;;;;;;515:19:54;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:54;;;;;515;549:40;;515:6;;549:40;-1:-1:-1;;;;;431:25:8;;;;423:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;495:7;:18;;-1:-1:-1;;;;;;495:18:8;-1:-1:-1;;;;;495:18:8;;;;;;;;;;178:807;;;-1:-1:-1;178:807:8;;",
  "deployedSourceMap": "178:807:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;178:807:8;;;;;;-1:-1:-1;;;178:807:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:25;;;:::i;:::-;;;;-1:-1:-1;;;;;223:25:8;;;;;;;;;;;;;;1423:137:54;;;:::i;:::-;;824:159:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;824:159:8;;;;;;;;;;:::i;659:77:54:-;;;:::i;979:90::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;1731:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1731:107:54;-1:-1:-1;;;;;1731:107:54;;:::i;223:25:8:-;;;-1:-1:-1;;;;;223:25:8;;:::o;1423:137:54:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1521:1;1505:6;;1484:40;;-1:-1:-1;;;;;1505:6:54;;;;1484:40;;1521:1;;1484:40;1551:1;1534:19;;-1:-1:-1;;1534:19:54;;;1423:137::o;824:159:8:-;906:7;400:10:1;-1:-1:-1;;;;;400:30:1;;;:74;;;;;462:4;-1:-1:-1;;;;;462:10:1;;:12;;;;;-1:-1:-1;;;462:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;462:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;462:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;462:12:1;442:15;;;;;;;;-1:-1:-1;;;;;434:40:1;;;;442:13;;;;;:15;;;;;462:12;;442:15;;;;;;;:13;:15;;;5:2:-1;;;;30:1;27;20:12;5:2;442:15:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;442:15:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;442:15:1;-1:-1:-1;;;;;434:40:1;;400:74;399:118;;;;505:4;-1:-1:-1;;;;;505:10:1;;:12;;;;;-1:-1:-1;;;505:12:1;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;505:12:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;505:12:1;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;505:12:1;-1:-1:-1;;;;;491:26:1;:10;:26;399:118;378:197;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;925:8:8;-1:-1:-1;;;;;925:21:8;;:23;;;;;-1:-1:-1;;;925:23:8;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;925:23:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;958:7:8;:18;;-1:-1:-1;;958:18:8;-1:-1:-1;;;;;958:18:8;;;;;;;;;;;-1:-1:-1;;;;824:159:8:o;659:77:54:-;697:7;723:6;-1:-1:-1;;;;;723:6:54;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:54;1042:10;:20;;979:90::o;1731:107::-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1803:28;1822:8;1803:18;:28::i;:::-;1731:107;:::o;1982:183::-;-1:-1:-1;;;;;2055:22:54;;;;2047:31;;;;;;2114:6;;;2093:38;;-1:-1:-1;;;;;2093:38:54;;;;2114:6;;;2093:38;;;2141:6;:17;;-1:-1:-1;;2141:17:54;-1:-1:-1;;;;;2141:17:54;;;;;;;;;;1982:183::o",
  "source": "pragma solidity 0.5.4;\n\nimport \"../AvatarGuard.sol\";\nimport \"./FeeFormula.sol\";\n\n/* @title Fee guard contract in charge of setting registered fee formula schemes to contract\n */\ncontract FormulaHolder is AvatarGuard {\n\n    FeeFormula public formula;\n\n    /* @dev Constructor. Checks if formula is a zero address\n     * @param _formula The fee formula contract.\n     */\n    constructor(FeeFormula _formula) public {\n        require(_formula != FeeFormula(0), \"Supplied formula is null\");\n        formula = _formula;\n    }\n\n    /* @dev Sets the given fee formula contract. Reverts if formula has not been registered by DAO.\n     * Is only callable by owner or given avatar if contract is owned by controller of avatar\n     * @param _formula the new fee formula scheme\n     * @param _avatar the avatar to call with\n     */\n    function setFormula(FeeFormula _formula, Avatar _avatar) public onlyOwnerOrAvatar(_avatar) {\n        _formula.isRegistered();\n        formula = _formula;\n    }\n}",
  "sourcePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
  "ast": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
    "exportedSymbols": {
      "FormulaHolder": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1130,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/AvatarGuard.sol",
        "file": "../AvatarGuard.sol",
        "id": 1131,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 98,
        "src": "24:28:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "./FeeFormula.sol",
        "id": 1132,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 869,
        "src": "53:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1133,
              "name": "AvatarGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "204:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AvatarGuard_$97",
                "typeString": "contract AvatarGuard"
              }
            },
            "id": 1134,
            "nodeType": "InheritanceSpecifier",
            "src": "204:11:8"
          }
        ],
        "contractDependencies": [
          97,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          97,
          12502
        ],
        "name": "FormulaHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1136,
            "name": "formula",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "223:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FeeFormula_$868",
              "typeString": "contract FeeFormula"
            },
            "typeName": {
              "contractScope": null,
              "id": 1135,
              "name": "FeeFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 868,
              "src": "223:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeFormula_$868",
                "typeString": "contract FeeFormula"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "413:107:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_FeeFormula_$868",
                          "typeString": "contract FeeFormula"
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1142,
                          "name": "_formula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "431:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeFormula_$868",
                            "typeString": "contract FeeFormula"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "454:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1143,
                            "name": "FeeFormula",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "443:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FeeFormula_$868_$",
                              "typeString": "type(contract FeeFormula)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "443:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeFormula_$868",
                            "typeString": "contract FeeFormula"
                          }
                        },
                        "src": "431:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537570706c69656420666f726d756c61206973206e756c6c",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "458:26:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        },
                        "value": "Supplied formula is null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        }
                      ],
                      "id": 1141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13022,
                        13023
                      ],
                      "referencedDeclaration": 13023,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "423:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1150,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "495:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1151,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "505:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "src": "495:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "495:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 1155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "385:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$868",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1137,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 868,
                    "src": "385:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:21:8"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:8"
            },
            "scope": 1176,
            "src": "373:147:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "915:68:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1165,
                        "name": "_formula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "925:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeFormula_$868",
                          "typeString": "contract FeeFormula"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2062,
                      "src": "925:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$__$",
                        "typeString": "function () view external"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "925:23:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1170,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "958:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1171,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "968:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "src": "958:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "958:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1162,
                    "name": "_avatar",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1159,
                    "src": "906:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 1163,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1161,
                  "name": "onlyOwnerOrAvatar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 96,
                  "src": "888:17:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_Avatar_$4433_$",
                    "typeString": "modifier (contract Avatar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "888:26:8"
              }
            ],
            "name": "setFormula",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "844:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$868",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1156,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 868,
                    "src": "844:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1159,
                  "name": "_avatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "865:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avatar_$4433",
                    "typeString": "contract Avatar"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1158,
                    "name": "Avatar",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4433,
                    "src": "865:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:37:8"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:8"
            },
            "scope": 1176,
            "src": "824:159:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "178:807:8"
      }
    ],
    "src": "0:985:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FormulaHolder.sol",
    "exportedSymbols": {
      "FormulaHolder": [
        1176
      ]
    },
    "id": 1177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1130,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/AvatarGuard.sol",
        "file": "../AvatarGuard.sol",
        "id": 1131,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 98,
        "src": "24:28:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
        "file": "./FeeFormula.sol",
        "id": 1132,
        "nodeType": "ImportDirective",
        "scope": 1177,
        "sourceUnit": 869,
        "src": "53:26:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1133,
              "name": "AvatarGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 97,
              "src": "204:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AvatarGuard_$97",
                "typeString": "contract AvatarGuard"
              }
            },
            "id": 1134,
            "nodeType": "InheritanceSpecifier",
            "src": "204:11:8"
          }
        ],
        "contractDependencies": [
          97,
          12502
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1176,
        "linearizedBaseContracts": [
          1176,
          97,
          12502
        ],
        "name": "FormulaHolder",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1136,
            "name": "formula",
            "nodeType": "VariableDeclaration",
            "scope": 1176,
            "src": "223:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FeeFormula_$868",
              "typeString": "contract FeeFormula"
            },
            "typeName": {
              "contractScope": null,
              "id": 1135,
              "name": "FeeFormula",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 868,
              "src": "223:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FeeFormula_$868",
                "typeString": "contract FeeFormula"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1154,
              "nodeType": "Block",
              "src": "413:107:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_contract$_FeeFormula_$868",
                          "typeString": "contract FeeFormula"
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1142,
                          "name": "_formula",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1138,
                          "src": "431:8:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeFormula_$868",
                            "typeString": "contract FeeFormula"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 1144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "454:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1143,
                            "name": "FeeFormula",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "443:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FeeFormula_$868_$",
                              "typeString": "type(contract FeeFormula)"
                            }
                          },
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "443:13:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FeeFormula_$868",
                            "typeString": "contract FeeFormula"
                          }
                        },
                        "src": "431:25:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537570706c69656420666f726d756c61206973206e756c6c",
                        "id": 1147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "458:26:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        },
                        "value": "Supplied formula is null"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_21fb992c59e983345337aad14a0eea0346704404979158276789e83b73ba8546",
                          "typeString": "literal_string \"Supplied formula is null\""
                        }
                      ],
                      "id": 1141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        13022,
                        13023
                      ],
                      "referencedDeclaration": 13023,
                      "src": "423:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "423:62:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "423:62:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1150,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "495:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1151,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1138,
                      "src": "505:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "src": "495:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "id": 1153,
                  "nodeType": "ExpressionStatement",
                  "src": "495:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 1155,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1138,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 1155,
                  "src": "385:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$868",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1137,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 868,
                    "src": "385:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:21:8"
            },
            "returnParameters": {
              "id": 1140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "413:0:8"
            },
            "scope": 1176,
            "src": "373:147:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1174,
              "nodeType": "Block",
              "src": "915:68:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 1165,
                        "name": "_formula",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1157,
                        "src": "925:8:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeFormula_$868",
                          "typeString": "contract FeeFormula"
                        }
                      },
                      "id": 1167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isRegistered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2062,
                      "src": "925:21:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$__$",
                        "typeString": "function () view external"
                      }
                    },
                    "id": 1168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "925:23:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1169,
                  "nodeType": "ExpressionStatement",
                  "src": "925:23:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1170,
                      "name": "formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1136,
                      "src": "958:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1171,
                      "name": "_formula",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1157,
                      "src": "968:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FeeFormula_$868",
                        "typeString": "contract FeeFormula"
                      }
                    },
                    "src": "958:18:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "id": 1173,
                  "nodeType": "ExpressionStatement",
                  "src": "958:18:8"
                }
              ]
            },
            "documentation": null,
            "id": 1175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1162,
                    "name": "_avatar",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1159,
                    "src": "906:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 1163,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1161,
                  "name": "onlyOwnerOrAvatar",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 96,
                  "src": "888:17:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_contract$_Avatar_$4433_$",
                    "typeString": "modifier (contract Avatar)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "888:26:8"
              }
            ],
            "name": "setFormula",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1157,
                  "name": "_formula",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "844:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_FeeFormula_$868",
                    "typeString": "contract FeeFormula"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1156,
                    "name": "FeeFormula",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 868,
                    "src": "844:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FeeFormula_$868",
                      "typeString": "contract FeeFormula"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1159,
                  "name": "_avatar",
                  "nodeType": "VariableDeclaration",
                  "scope": 1175,
                  "src": "865:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Avatar_$4433",
                    "typeString": "contract Avatar"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 1158,
                    "name": "Avatar",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 4433,
                    "src": "865:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$4433",
                      "typeString": "contract Avatar"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "843:37:8"
            },
            "returnParameters": {
              "id": 1164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:8"
            },
            "scope": 1176,
            "src": "824:159:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1177,
        "src": "178:807:8"
      }
    ],
    "src": "0:985:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-09-22T12:47:44.110Z",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      }
    }
  }
}