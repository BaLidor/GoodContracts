{
  "contractName": "FeeFormula",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_avatar",
          "type": "address"
        }
      ],
      "name": "setAvatar",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isRegistered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "scheme",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "percentage",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "senderPays",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_percentage",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_value",
          "type": "uint256"
        },
        {
          "name": "_sender",
          "type": "address"
        },
        {
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "getTxFees",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.4+commit.9549d8ff\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_avatar\",\"type\":\"address\"}],\"name\":\"setAvatar\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_sender\",\"type\":\"address\"},{\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"getTxFees\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"scheme\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"percentage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"senderPays\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_percentage\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"constructor\":{\"details\":\"Constructor. Requires the given percentage parameter to be less than 100.\",\"params\":{\"_percentage\":\"the percentage to calculate fees of\"}},\"getTxFees(uint256,address,address)\":{\"details\":\"calculates the fee of given value.\",\"params\":{\"_recipient\":\"address receiving.\",\"_sender\":\"address sending.\",\"_value\":\"the value of the transaction to calculate fees from\"},\"return\":\"the transactional fee for given value\"},\"isOwner()\":{\"return\":\"true if `msg.sender` is the owner of the contract.\"},\"isRegistered()\":{\"details\":\"function to see if an avatar has been set and if this scheme is registered\",\"return\":\"true if scheme is registered\"},\"isRegistered(address)\":{\"details\":\"function to see if an avatar has been set and if this scheme is registered\",\"return\":\"true if scheme is registered\"},\"owner()\":{\"return\":\"the address of the owner.\"},\"renounceOwnership()\":{\"details\":\"Allows the current owner to relinquish control of the contract.\"},\"setAvatar(address)\":{\"details\":\"Function to set a new avatar and controller for scheme can only be done by owner of scheme\"},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"newOwner\":\"The address to transfer ownership to.\"}}},\"title\":\"Fee formula contract contract that provides a function to calculate fees as a percentage of any given value\"},\"userdoc\":{\"methods\":{\"renounceOwnership()\":{\"notice\":\"Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol\":\"FeeFormula\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol\":{\"keccak256\":\"0xb57a014be76514e7cb3ef4846201b37a21d36340efeeb347dc8e8f6e5ced8040\",\"urls\":[\"bzzr://59818faddcb55bae98e3c25739f0e84540e2e85228f924120ade24ee5e903673\"]},\"/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol\":{\"keccak256\":\"0xbf0b5a7a7c8a3718b4110d188c69fdf07ce3127232903d1e094c237c57d11e46\",\"urls\":[\"bzzr://391e945d3821401aff3ccaf7747d45ad2add33d663b5843e67e57234f40e4cc0\"]},\"@daostack/arc/contracts/controller/Avatar.sol\":{\"keccak256\":\"0x4e4fb9d3bc21f42fbfc6a01e9f8aa483a59e9f447b0d604f55b587a81ec09ef4\",\"urls\":[\"bzzr://b0af60e651a75274a028dc4b53d06091a46ca0efa3bfb4153879e76cf86a49dc\"]},\"@daostack/arc/contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x933e92612c90f292c7b59908958b003f1a13d90b97bed0572b566353c20974dc\",\"urls\":[\"bzzr://e8050774c20b9b22636b47cdd353eaf5df72e0bca8f2b8569365be30f4eaef0c\"]},\"@daostack/arc/contracts/controller/DAOToken.sol\":{\"keccak256\":\"0x9b213e4e3ceeffcfc1c962a43b70b8d763d8091a2dd713fc1989b97bb68786e6\",\"urls\":[\"bzzr://7ba306fdbad344e01474e3ae9c37b27b64efdc1cb17ffc0f3ec1c4427fde359d\"]},\"@daostack/arc/contracts/globalConstraints/GlobalConstraintInterface.sol\":{\"keccak256\":\"0xc006c4591ec10b845a56e13f6791db2c428610953034686d52b2a934b6c8f36f\",\"urls\":[\"bzzr://d1f293a0bbaa292296a83977cb36a14048db404a32e3f6aa9bd79ea61ac3c4c3\"]},\"@daostack/arc/contracts/libs/SafeERC20.sol\":{\"keccak256\":\"0xf6727d432f67046145b078f40c1cc4f6be7b0d12a6678ecaf457edf7550d244c\",\"urls\":[\"bzzr://cd706a2dc7540d093b591a280b464256c596ddad598b68886e6db2e7958f9916\"]},\"@daostack/infra/contracts/Reputation.sol\":{\"keccak256\":\"0x3d226dac0fe7d758f0287fb28bc25fcec1f69d19888ae3a550fa49856d61c482\",\"urls\":[\"bzzr://7f219e1874d4f1aea860cc665b75015797f55f149e9bf490abab5d7ad2adfeb9\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x980de387a1a020a498f53d00f89fecebb12c949a17e8f160093c0303ede2b786\",\"urls\":[\"bzzr://08894efa2a557982070beda6a81a032407e70532d24bdafe80d39660c74904d9\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xba431353cb4fe70777ac026231eb5468e41aa1e81240a2b8136917acc5fff4dc\",\"urls\":[\"bzzr://80cd02a56e6e33504318124d0d645c82e615cc8a4b5829cc9d82d17635c644c8\"]},\"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\":{\"keccak256\":\"0xa3e68fd7f987c8fbdaf4867d428a69a15f3cf2f69709a5b0a0fbef750b0e6fbc\",\"urls\":[\"bzzr://f4ebb7c5b9e429b98b07e2caca6156c13c3724e9b1191cca8423ab8427bc6265\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x5c731061b804fa256fc8c05150eafe5d20b6bb94541a8f187912bf84f7033f34\",\"urls\":[\"bzzr://63fc4af0d7a99a770925b96a6cf48f25fc00d30274266f82db05f30baa238267\"]}},\"version\":1}",
  "bytecode": "0x608060405260028054600160a060020a031916905534801561002057600080fd5b506040516020806107f88339810180604052602081101561004057600080fd5b505160008054600160a060020a0319163317808255604051600160a060020a03919091169082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a360018054600160a060020a031916600160a060020a038381169190911791829055161561016957600160009054906101000a9004600160a060020a0316600160a060020a0316638da5cb5b6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561011d57600080fd5b505afa158015610131573d6000803e3d6000fd5b505050506040513d602081101561014757600080fd5b505160028054600160a060020a031916600160a060020a039092169190911790555b50606481106101d957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f50657263656e746167652073686f756c64206265203c31303000000000000000604482015290519081900360640190fd5b60035561060d806101eb6000396000f3fe608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b1461017d578063c3c5a54714610185578063c78ad77f146101ab578063e662c7f5146101c5578063f2fde38b146101cd576100bb565b8063086cfca8146100c057806322366844146100e85780633ddaa80614610104578063715018a6146101515780638da5cb5b14610159575b600080fd5b6100e6600480360360208110156100d657600080fd5b5035600160a060020a03166101f3565b005b6100f06102e3565b604080519115158252519081900360200190f35b6101386004803603606081101561011a57600080fd5b50803590600160a060020a03602082013581169160400135166102f3565b6040805192835290151560208301528051918290030190f35b6100e6610328565b610161610392565b60408051600160a060020a039092168252519081900360200190f35b6100f06103a1565b6100f06004803603602081101561019b57600080fd5b5035600160a060020a03166103b2565b6101b36104e2565b60408051918252519081900360200190f35b6100f06104e8565b6100e6600480360360208110156101e357600080fd5b5035600160a060020a03166104ed565b6101fb6103a1565b151561020657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055604080517f8da5cb5b00000000000000000000000000000000000000000000000000000000815290519290911691638da5cb5b91600480820192602092909190829003018186803b15801561028857600080fd5b505afa15801561029c573d6000803e3d6000fd5b505050506040513d60208110156102b257600080fd5b50516002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390921691909117905550565b60006102ee306103b2565b905090565b60008061031c60035461031060648861050c90919063ffffffff16565b9063ffffffff61053216565b95600095509350505050565b6103306103a1565b151561033b57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b600154600090600160a060020a0316151561042e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f417661746172206973206e6f7420736574000000000000000000000000000000604482015290519081900360640190fd5b600254600154604080517f9be2faed000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152928316602482015290519190921691639be2faed916044808301926020929190829003018186803b15801561049f57600080fd5b505afa1580156104b3573d6000803e3d6000fd5b505050506040513d60208110156104c957600080fd5b505115156104d9575060006104dd565b5060015b919050565b60035481565b600081565b6104f56103a1565b151561050057600080fd5b61050981610564565b50565b600080821161051a57600080fd5b6000828481151561052757fe5b049150505b92915050565b60008215156105435750600061052c565b82820282848281151561055257fe5b041461055d57600080fd5b9392505050565b600160a060020a038116151561057957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a7230582000782e7f834ba1707691d49473a13f8441552945314fe5604bc166438f1742f60029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100bb576000357c0100000000000000000000000000000000000000000000000000000000900480638f32d59b116100835780638f32d59b1461017d578063c3c5a54714610185578063c78ad77f146101ab578063e662c7f5146101c5578063f2fde38b146101cd576100bb565b8063086cfca8146100c057806322366844146100e85780633ddaa80614610104578063715018a6146101515780638da5cb5b14610159575b600080fd5b6100e6600480360360208110156100d657600080fd5b5035600160a060020a03166101f3565b005b6100f06102e3565b604080519115158252519081900360200190f35b6101386004803603606081101561011a57600080fd5b50803590600160a060020a03602082013581169160400135166102f3565b6040805192835290151560208301528051918290030190f35b6100e6610328565b610161610392565b60408051600160a060020a039092168252519081900360200190f35b6100f06103a1565b6100f06004803603602081101561019b57600080fd5b5035600160a060020a03166103b2565b6101b36104e2565b60408051918252519081900360200190f35b6100f06104e8565b6100e6600480360360208110156101e357600080fd5b5035600160a060020a03166104ed565b6101fb6103a1565b151561020657600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a038381169190911791829055604080517f8da5cb5b00000000000000000000000000000000000000000000000000000000815290519290911691638da5cb5b91600480820192602092909190829003018186803b15801561028857600080fd5b505afa15801561029c573d6000803e3d6000fd5b505050506040513d60208110156102b257600080fd5b50516002805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0390921691909117905550565b60006102ee306103b2565b905090565b60008061031c60035461031060648861050c90919063ffffffff16565b9063ffffffff61053216565b95600095509350505050565b6103306103a1565b151561033b57600080fd5b60008054604051600160a060020a03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a36000805473ffffffffffffffffffffffffffffffffffffffff19169055565b600054600160a060020a031690565b600054600160a060020a0316331490565b600154600090600160a060020a0316151561042e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f417661746172206973206e6f7420736574000000000000000000000000000000604482015290519081900360640190fd5b600254600154604080517f9be2faed000000000000000000000000000000000000000000000000000000008152600160a060020a038681166004830152928316602482015290519190921691639be2faed916044808301926020929190829003018186803b15801561049f57600080fd5b505afa1580156104b3573d6000803e3d6000fd5b505050506040513d60208110156104c957600080fd5b505115156104d9575060006104dd565b5060015b919050565b60035481565b600081565b6104f56103a1565b151561050057600080fd5b61050981610564565b50565b600080821161051a57600080fd5b6000828481151561052757fe5b049150505b92915050565b60008215156105435750600061052c565b82820282848281151561055257fe5b041461055d57600080fd5b9392505050565b600160a060020a038116151561057957600080fd5b60008054604051600160a060020a03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a36000805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a039290921691909117905556fea165627a7a7230582000782e7f834ba1707691d49473a13f8441552945314fe5604bc166438f1742f60029",
  "sourceMap": "583:949:8:-;;;443:64:18;;;-1:-1:-1;;;;;;443:64:18;;;906:146:8;5:2:-1;;;;30:1;27;20:12;5:2;906:146:8;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;906:146:8;302:1;515:19:68;;-1:-1:-1;;;;;;515:19:68;524:10;515:19;;;;549:40;;-1:-1:-1;;;;;582:6:68;;;;;302:1:8;;549:40:68;;302:1:8;;549:40:68;688:6:18;:16;;-1:-1:-1;;;;;;688:16:18;-1:-1:-1;;;;;688:16:18;;;;;;;;;;;719:6;:19;715:98;;787:6;;;;;;;;;-1:-1:-1;;;;;787:6:18;-1:-1:-1;;;;;787:12:18;;:14;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;787:14:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;787:14:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;787:14:18;754:10;:48;;-1:-1:-1;;;;;;754:48:18;-1:-1:-1;;;;;754:48:18;;;;;;;;;715:98;-1:-1:-1;978:3:8;964:17;;956:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1021:10;:24;583:949;;;;;;",
  "deployedSourceMap": "583:949:8:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:949:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1698:143:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1698:143:18;-1:-1:-1;;;;;1698:143:18;;:::i;:::-;;1987:102;;;:::i;:::-;;;;;;;;;;;;;;;;;;1325:205:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1325:205:8;;;-1:-1:-1;;;;;1325:205:8;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1347:137:68;;;:::i;659:77::-;;;:::i;:::-;;;;-1:-1:-1;;;;;659:77:68;;;;;;;;;;;;;;979:90;;;:::i;2235:262:18:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2235:262:18;-1:-1:-1;;;;;2235:262:18;;:::i;658:25:8:-;;;:::i;:::-;;;;;;;;;;;;;;;;689:39;;;:::i;1655:107:68:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1655:107:68;-1:-1:-1;;;;;1655:107:68;;:::i;1698:143:18:-;863:9:68;:7;:9::i;:::-;855:18;;;;;;;;1760:6:18;:16;;-1:-1:-1;;1760:16:18;-1:-1:-1;;;;;1760:16:18;;;;;;;;;;;1819:14;;;;;;;;:6;;;;;:12;;:14;;;;;;;;;;;;;;;:6;:14;;;5:2:-1;;;;30:1;27;20:12;5:2;1819:14:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1819:14:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1819:14:18;1786:10;:48;;-1:-1:-1;;1786:48:18;-1:-1:-1;;;;;1786:48:18;;;;;;;;;-1:-1:-1;1698:143:18:o;1987:102::-;2032:4;2055:27;2076:4;2055:12;:27::i;:::-;2048:34;;1987:102;:::o;1325:205:8:-;1442:7;1451:4;1479:31;1499:10;;1479:15;1490:3;1479:6;:10;;:15;;;;:::i;:::-;:19;:31;:19;:31;:::i;:::-;1471:52;723:5;;-1:-1:-1;1325:205:8;-1:-1:-1;;;;1325:205:8:o;1347:137:68:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1445:1;1429:6;;1408:40;;-1:-1:-1;;;;;1429:6:68;;;;1408:40;;1445:1;;1408:40;1475:1;1458:19;;-1:-1:-1;;1458:19:68;;;1347:137::o;659:77::-;697:7;723:6;-1:-1:-1;;;;;723:6:68;659:77;:::o;979:90::-;1019:4;1056:6;-1:-1:-1;;;;;1056:6:68;1042:10;:20;;979:90::o;2235:262:18:-;2318:6;;2294:4;;-1:-1:-1;;;;;2318:6:18;:19;;2310:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2376:10;;;2422:6;2376:54;;;;;;-1:-1:-1;;;;;2376:54:18;;;;;;;2422:6;;;2376:54;;;;;;:10;;;;;:29;;:54;;;;;;;;;;;;;;:10;:54;;;5:2:-1;;;;30:1;27;20:12;5:2;2376:54:18;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2376:54:18;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2376:54:18;2374:57;2370:100;;;-1:-1:-1;2454:5:18;2447:12;;2370:100;-1:-1:-1;2486:4:18;2235:262;;;;:::o;658:25:8:-;;;;:::o;689:39::-;723:5;689:39;:::o;1655:107:68:-;863:9;:7;:9::i;:::-;855:18;;;;;;;;1727:28;1746:8;1727:18;:28::i;:::-;1655:107;:::o;778:296:67:-;836:7;929:5;;;921:14;;;;;;945:9;961:1;957;:5;;;;;;;;;-1:-1:-1;;778:296:67;;;;;:::o;229:421::-;287:7;527:6;;523:45;;;-1:-1:-1;556:1:67;549:8;;523:45;590:5;;;594:1;590;:5;613;;;;;;;;:10;605:19;;;;;;642:1;229:421;-1:-1:-1;;;229:421:67:o;1906:183:68:-;-1:-1:-1;;;;;1979:22:68;;;;1971:31;;;;;;2038:6;;;2017:38;;-1:-1:-1;;;;;2017:38:68;;;;2038:6;;;2017:38;;;2065:6;:17;;-1:-1:-1;;2065:17:68;-1:-1:-1;;;;;2065:17:68;;;;;;;;;;1906:183::o",
  "source": "pragma solidity 0.5.4;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"@daostack/arc/contracts/controller/Avatar.sol\";\n\nimport \"./SchemeGuard.sol\";\n\n\n/**\n * @title Fee formula abstract contract\n */\ncontract AbstractFees is SchemeGuard {\n    constructor() public SchemeGuard(Avatar(0)) {}\n\n    function getTxFees(uint256 _value, address _sender, address _recipient)\n        public\n        view\n        returns (uint256, bool);\n}\n\n\n/**\n * @title Fee formula contract\n * contract that provides a function to calculate\n * fees as a percentage of any given value\n */\ncontract FeeFormula is AbstractFees {\n    using SafeMath for uint256;\n\n    uint256 public percentage;\n    bool public constant senderPays = false;\n\n    /**\n     * @dev Constructor. Requires the given percentage parameter\n     * to be less than 100.\n     * @param _percentage the percentage to calculate fees of\n     */\n    constructor(uint256 _percentage) public {\n        require(_percentage < 100, \"Percentage should be <100\");\n        percentage = _percentage;\n    }\n\n    /**  @dev calculates the fee of given value.\n     * @param _value the value of the transaction to calculate fees from\n     * @param _sender address sending.\n     *  @param _recipient address receiving.\n     * @return the transactional fee for given value\n     */\n    function getTxFees(uint256 _value, address _sender, address _recipient)\n        public\n        view\n        returns (uint256, bool)\n    {\n        return (_value.div(100).mul(percentage), senderPays);\n    }\n}\n",
  "sourcePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
  "ast": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
    "exportedSymbols": {
      "AbstractFees": [
        1381
      ],
      "FeeFormula": [
        1433
      ]
    },
    "id": 1434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1353,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1354,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 15920,
        "src": "24:59:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@daostack/arc/contracts/controller/Avatar.sol",
        "file": "@daostack/arc/contracts/controller/Avatar.sol",
        "id": 1355,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 7317,
        "src": "84:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol",
        "file": "./SchemeGuard.sol",
        "id": 1356,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 2881,
        "src": "141:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1357,
              "name": "SchemeGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2880,
              "src": "244:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SchemeGuard_$2880",
                "typeString": "contract SchemeGuard"
              }
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "244:11:8"
          }
        ],
        "contractDependencies": [
          2880,
          16028
        ],
        "contractKind": "contract",
        "documentation": "@title Fee formula abstract contract",
        "fullyImplemented": false,
        "id": 1381,
        "linearizedBaseContracts": [
          1381,
          2880,
          16028
        ],
        "name": "AbstractFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "306:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "302:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1361,
                      "name": "Avatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7316,
                      "src": "295:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Avatar_$7316_$",
                        "typeString": "type(contract Avatar)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$7316",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 1364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1360,
                  "name": "SchemeGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2880,
                  "src": "283:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SchemeGuard_$2880_$",
                    "typeString": "type(contract SchemeGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "283:22:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:2:8"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:8"
            },
            "scope": 1381,
            "src": "262:46:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1380,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "333:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1371,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "349:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "366:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "332:53:8"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "431:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "440:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "430:15:8"
            },
            "scope": 1381,
            "src": "314:132:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1434,
        "src": "219:229:8"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1382,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1381,
              "src": "606:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$1381",
                "typeString": "contract AbstractFees"
              }
            },
            "id": 1383,
            "nodeType": "InheritanceSpecifier",
            "src": "606:12:8"
          }
        ],
        "contractDependencies": [
          1381,
          2880,
          16028
        ],
        "contractKind": "contract",
        "documentation": "@title Fee formula contract\ncontract that provides a function to calculate\nfees as a percentage of any given value",
        "fullyImplemented": true,
        "id": 1433,
        "linearizedBaseContracts": [
          1433,
          1381,
          2880,
          16028
        ],
        "name": "FeeFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1386,
            "libraryName": {
              "contractScope": null,
              "id": 1384,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15919,
              "src": "631:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15919",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "625:27:8",
            "typeName": {
              "id": 1385,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1388,
            "name": "percentage",
            "nodeType": "VariableDeclaration",
            "scope": 1433,
            "src": "658:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1387,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1391,
            "name": "senderPays",
            "nodeType": "VariableDeclaration",
            "scope": 1433,
            "src": "689:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1389,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "689:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "723:5:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1407,
              "nodeType": "Block",
              "src": "946:106:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1397,
                          "name": "_percentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1393,
                          "src": "964:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "978:3:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "964:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50657263656e746167652073686f756c64206265203c313030",
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:27:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d23d155ce1199578552f069509ef8a20a692a081b3518bb8d51a8f1a83643608",
                          "typeString": "literal_string \"Percentage should be <100\""
                        },
                        "value": "Percentage should be <100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d23d155ce1199578552f069509ef8a20a692a081b3518bb8d51a8f1a83643608",
                          "typeString": "literal_string \"Percentage should be <100\""
                        }
                      ],
                      "id": 1396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16785,
                        16786
                      ],
                      "referencedDeclaration": 16786,
                      "src": "956:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "956:55:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1403,
                      "name": "percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "1021:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1404,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1393,
                      "src": "1034:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1021:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:24:8"
                }
              ]
            },
            "documentation": "@dev Constructor. Requires the given percentage parameter\nto be less than 100.\n@param _percentage the percentage to calculate fees of",
            "id": 1408,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_percentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "918:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:21:8"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:8"
            },
            "scope": 1433,
            "src": "906:146:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "1461:69:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1426,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "1499:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1490:3:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1421,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1410,
                                "src": "1479:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15850,
                              "src": "1479:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1479:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15826,
                          "src": "1479:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1479:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "senderPays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "1512:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1429,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1478:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1420,
                  "id": 1430,
                  "nodeType": "Return",
                  "src": "1471:52:8"
                }
              ]
            },
            "documentation": "@dev calculates the fee of given value.\n@param _value the value of the transaction to calculate fees from\n@param _sender address sending.\n @param _recipient address receiving.\n@return the transactional fee for given value",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1344:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1412,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1360:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1414,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1377:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1343:53:8"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1442:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1419,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1451:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1441:15:8"
            },
            "scope": 1433,
            "src": "1325:205:8",
            "stateMutability": "view",
            "superFunction": 1380,
            "visibility": "public"
          }
        ],
        "scope": 1434,
        "src": "583:949:8"
      }
    ],
    "src": "0:1533:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/FeeFormula.sol",
    "exportedSymbols": {
      "AbstractFees": [
        1381
      ],
      "FeeFormula": [
        1433
      ]
    },
    "id": 1434,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1353,
        "literals": [
          "solidity",
          "0.5",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:8"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 1354,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 15920,
        "src": "24:59:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@daostack/arc/contracts/controller/Avatar.sol",
        "file": "@daostack/arc/contracts/controller/Avatar.sol",
        "id": 1355,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 7317,
        "src": "84:55:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hadar/workspace/GoodDollar/GoodBootstrap/packages/contracts/contracts/dao/schemes/SchemeGuard.sol",
        "file": "./SchemeGuard.sol",
        "id": 1356,
        "nodeType": "ImportDirective",
        "scope": 1434,
        "sourceUnit": 2881,
        "src": "141:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1357,
              "name": "SchemeGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2880,
              "src": "244:11:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SchemeGuard_$2880",
                "typeString": "contract SchemeGuard"
              }
            },
            "id": 1358,
            "nodeType": "InheritanceSpecifier",
            "src": "244:11:8"
          }
        ],
        "contractDependencies": [
          2880,
          16028
        ],
        "contractKind": "contract",
        "documentation": "@title Fee formula abstract contract",
        "fullyImplemented": false,
        "id": 1381,
        "linearizedBaseContracts": [
          1381,
          2880,
          16028
        ],
        "name": "AbstractFees",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1366,
              "nodeType": "Block",
              "src": "306:2:8",
              "statements": []
            },
            "documentation": null,
            "id": 1367,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 1362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "302:1:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 1361,
                      "name": "Avatar",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7316,
                      "src": "295:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Avatar_$7316_$",
                        "typeString": "type(contract Avatar)"
                      }
                    },
                    "id": 1363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "295:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Avatar_$7316",
                      "typeString": "contract Avatar"
                    }
                  }
                ],
                "id": 1364,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1360,
                  "name": "SchemeGuard",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2880,
                  "src": "283:11:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_SchemeGuard_$2880_$",
                    "typeString": "type(contract SchemeGuard)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "283:22:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "273:2:8"
            },
            "returnParameters": {
              "id": 1365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:0:8"
            },
            "scope": 1381,
            "src": "262:46:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 1380,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1374,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1369,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "333:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "333:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1371,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "349:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1370,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "349:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1373,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "366:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "366:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "332:53:8"
            },
            "returnParameters": {
              "id": 1379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1376,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "431:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1375,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "431:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1378,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1380,
                  "src": "440:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1377,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "440:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "430:15:8"
            },
            "scope": 1381,
            "src": "314:132:8",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1434,
        "src": "219:229:8"
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1382,
              "name": "AbstractFees",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1381,
              "src": "606:12:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AbstractFees_$1381",
                "typeString": "contract AbstractFees"
              }
            },
            "id": 1383,
            "nodeType": "InheritanceSpecifier",
            "src": "606:12:8"
          }
        ],
        "contractDependencies": [
          1381,
          2880,
          16028
        ],
        "contractKind": "contract",
        "documentation": "@title Fee formula contract\ncontract that provides a function to calculate\nfees as a percentage of any given value",
        "fullyImplemented": true,
        "id": 1433,
        "linearizedBaseContracts": [
          1433,
          1381,
          2880,
          16028
        ],
        "name": "FeeFormula",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 1386,
            "libraryName": {
              "contractScope": null,
              "id": 1384,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15919,
              "src": "631:8:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$15919",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "625:27:8",
            "typeName": {
              "id": 1385,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "644:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 1388,
            "name": "percentage",
            "nodeType": "VariableDeclaration",
            "scope": 1433,
            "src": "658:25:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1387,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "658:7:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 1391,
            "name": "senderPays",
            "nodeType": "VariableDeclaration",
            "scope": 1433,
            "src": "689:39:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1389,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "689:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "66616c7365",
              "id": 1390,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "723:5:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1407,
              "nodeType": "Block",
              "src": "946:106:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 1397,
                          "name": "_percentage",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1393,
                          "src": "964:11:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "313030",
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "978:3:8",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "964:17:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50657263656e746167652073686f756c64206265203c313030",
                        "id": 1400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "983:27:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d23d155ce1199578552f069509ef8a20a692a081b3518bb8d51a8f1a83643608",
                          "typeString": "literal_string \"Percentage should be <100\""
                        },
                        "value": "Percentage should be <100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d23d155ce1199578552f069509ef8a20a692a081b3518bb8d51a8f1a83643608",
                          "typeString": "literal_string \"Percentage should be <100\""
                        }
                      ],
                      "id": 1396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        16785,
                        16786
                      ],
                      "referencedDeclaration": 16786,
                      "src": "956:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "956:55:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1402,
                  "nodeType": "ExpressionStatement",
                  "src": "956:55:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 1405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 1403,
                      "name": "percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1388,
                      "src": "1021:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 1404,
                      "name": "_percentage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1393,
                      "src": "1034:11:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1021:24:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1406,
                  "nodeType": "ExpressionStatement",
                  "src": "1021:24:8"
                }
              ]
            },
            "documentation": "@dev Constructor. Requires the given percentage parameter\nto be less than 100.\n@param _percentage the percentage to calculate fees of",
            "id": 1408,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1393,
                  "name": "_percentage",
                  "nodeType": "VariableDeclaration",
                  "scope": 1408,
                  "src": "918:19:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1392,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "918:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "917:21:8"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "946:0:8"
            },
            "scope": 1433,
            "src": "906:146:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1431,
              "nodeType": "Block",
              "src": "1461:69:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 1426,
                            "name": "percentage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1388,
                            "src": "1499:10:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "313030",
                                "id": 1423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1490:3:8",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                },
                                "value": "100"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_100_by_1",
                                  "typeString": "int_const 100"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "id": 1421,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1410,
                                "src": "1479:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "div",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15850,
                              "src": "1479:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                "typeString": "function (uint256,uint256) pure returns (uint256)"
                              }
                            },
                            "id": 1424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1479:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mul",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15826,
                          "src": "1479:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1479:31:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 1428,
                        "name": "senderPays",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1391,
                        "src": "1512:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 1429,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1478:45:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 1420,
                  "id": 1430,
                  "nodeType": "Return",
                  "src": "1471:52:8"
                }
              ]
            },
            "documentation": "@dev calculates the fee of given value.\n@param _value the value of the transaction to calculate fees from\n@param _sender address sending.\n @param _recipient address receiving.\n@return the transactional fee for given value",
            "id": 1432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTxFees",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1410,
                  "name": "_value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1344:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1344:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1412,
                  "name": "_sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1360:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1411,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1360:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1414,
                  "name": "_recipient",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1377:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1377:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1343:53:8"
            },
            "returnParameters": {
              "id": 1420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1442:7:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1416,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1442:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1419,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1432,
                  "src": "1451:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1418,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1451:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1441:15:8"
            },
            "scope": 1433,
            "src": "1325:205:8",
            "stateMutability": "view",
            "superFunction": 1380,
            "visibility": "public"
          }
        ],
        "scope": 1434,
        "src": "583:949:8"
      }
    ],
    "src": "0:1533:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.4+commit.9549d8ff.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xf682cF625E694BBA800113E2b397fb8F96e2Fe3c",
      "transactionHash": "0xca1bd46f5f3eaa609a692741d67a68befc97ab7d03980bd80d793428ac62ebb8"
    },
    "122": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0xC7Aa27b4372A1fEc9e81dae52B6011f9496d1F30",
      "transactionHash": "0x51925819cbdb052f6ff7172695000a9285027a9ad84666eb09d150693c2e6d7a"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2020-07-09T12:07:37.976Z",
  "devdoc": {
    "methods": {
      "constructor": {
        "details": "Constructor. Requires the given percentage parameter to be less than 100.",
        "params": {
          "_percentage": "the percentage to calculate fees of"
        }
      },
      "getTxFees(uint256,address,address)": {
        "details": "calculates the fee of given value.",
        "params": {
          "_recipient": "address receiving.",
          "_sender": "address sending.",
          "_value": "the value of the transaction to calculate fees from"
        },
        "return": "the transactional fee for given value"
      },
      "isOwner()": {
        "return": "true if `msg.sender` is the owner of the contract."
      },
      "isRegistered()": {
        "details": "function to see if an avatar has been set and if this scheme is registered",
        "return": "true if scheme is registered"
      },
      "isRegistered(address)": {
        "details": "function to see if an avatar has been set and if this scheme is registered",
        "return": "true if scheme is registered"
      },
      "owner()": {
        "return": "the address of the owner."
      },
      "renounceOwnership()": {
        "details": "Allows the current owner to relinquish control of the contract."
      },
      "setAvatar(address)": {
        "details": "Function to set a new avatar and controller for scheme can only be done by owner of scheme"
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "newOwner": "The address to transfer ownership to."
        }
      }
    },
    "title": "Fee formula contract contract that provides a function to calculate fees as a percentage of any given value"
  },
  "userdoc": {
    "methods": {
      "renounceOwnership()": {
        "notice": "Renouncing to ownership will leave the contract without an owner. It will not be possible to call the functions with the `onlyOwner` modifier anymore."
      }
    }
  }
}